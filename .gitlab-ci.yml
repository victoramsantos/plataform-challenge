variables:
  DOCKERFILE_PATH: "./parte1"
  DOCKER_REPOSITORY: "victoramsantos"
  APPLICATION_NAME: plataform-challenge
  APPLICATION_PATH: "./app"
  APPLICATION_ARTIFACT: "./app/build/libs/app.jar"
  DOCKER_HOST: tcp://docker:2375
  HELM_CHART_PATH: "./parte1/plataform-challenge"

stages:
  - build
  - deploy
  - rollback_ec2
#  - packing
#
gradle_build:
  image: java:8-jdk
  stage: build
  script:
#    - cd $APPLICATION_PATH
    - ./gradlew clean build
  artifacts:
    paths:
      - $APPLICATION_ARTIFACT
#
#docker_build_push:
#  image: docker:18.09.7
#  services:
#    - docker:18.09.7-dind
#  stage: packing
#  script:
#    - docker build . -f $DOCKERFILE_PATH/Dockerfile -t $DOCKER_REPOSITORY/$APPLICATION_NAME:$CI_COMMIT_SHORT_SHA
#    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
#    - docker push $DOCKER_REPOSITORY/$APPLICATION_NAME:$CI_COMMIT_SHORT_SHA
#    - echo "APPLICATION_IMAGE -> $DOCKER_REPOSITORY/$APPLICATION_NAME:$CI_COMMIT_SHORT_SHA"
##  only:
##    - master

deploy_minikube_ec2:
  stage: deploy
  tags:
    - ec2-runner
  before_script:
    - mkdir -p ~/.ssh
    - echo -e “$SSH_PRIVATE_KEY” > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - helm upgrade --install --wait --timeout 1 --set-string image.tag=prd $APPLICATION_NAME $HELM_CHART_PATH
    - kubectl rollout status deploy/$APPLICATION_NAME
    - minikube service $APPLICATION_NAME --url
  only:
    - master

rollback_ec2_job:
  stage: rollback_ec2
  script:
    - helm rollback $APPLICATION_NAME 0
  when: on_failure